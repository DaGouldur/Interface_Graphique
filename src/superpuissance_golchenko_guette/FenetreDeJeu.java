/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package superpuissance_golchenko_guette;

import java.util.Random;
import java.util.Scanner;

/**
 *
 * @author dagou
 */
public class FenetreDeJeu extends javax.swing.JFrame {

    Joueur []  ListeJoueurs = new Joueur[2];
    Grille GrilleJeu=new Grille();
    Joueur JoueurCourant; 
    /**
     * Creates new form FenetreDeJeu
     */
    public FenetreDeJeu() {
    initComponents();
    PanneauInfoJeu.setVisible(false);// on désactive les 2 tableaux inutiles avant le début de la partie
    PanneauInfoJoueurs.setVisible(false);
        for (int i=0;i<6;i++){ // on crée une boucle qui crée la grille sur le PanneauGrille
            for (int j=0;j<7;j++){
             CelluleGraphique cellGraph = new CelluleGraphique(GrilleJeu.Cellules[i][j]);
             
            cellGraph.addActionListener(new java.awt.event.ActionListener() {//On donne les actions à suivre lorsque on clique sur une case
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    Cellule c = cellGraph.celluleAssocie;//On réfère la case
                    if (c.JetonCourant == null) return ;//Si la case est vide on ne fait rien
                    
                    if(c.JetonCourant.Couleur.equals(JoueurCourant.Couleur)){//Si la case est occupée par un jeton du joueur courant il récupère son jeton
                        textemessage.setText("le joueur " + JoueurCourant.Nom + " récupère un de ses jetons");
                        Jeton jrecup = c.recupererJeton();
                        JoueurCourant.ajouterJeton(jrecup);
                        c.supprimerJeton();
                        joueurSuivant();
                    }
                    else{//Sinon il s'agit d'un jeton adverse alors:
                        if (JoueurCourant.nombreDesintegrateurs > 0) {// Si on a au moins un désintégrateur on l'utilise
                            textemessage.setText("le joueur " + JoueurCourant.Nom + " désintégre un jeton");
                            c.supprimerJeton();
                            JoueurCourant.utiliserDesintegrateur();
                            joueurSuivant();
                        }
                        else return ;//Sinon on ne fait rien
                    }
                    GrilleJeu.tasserGrille();//On met à jour la grille et les différentes informations
                    PanneauGrille.repaint();
                    desint_var1.setText(ListeJoueurs[1].nombreDesintegrateurs+"");
                    desint_var2.setText(ListeJoueurs[0].nombreDesintegrateurs+"");
        
                    boolean vict_j1 = GrilleJeu.etreGagnantePourJoueur(ListeJoueurs[1]);
                    boolean vict_j2 = GrilleJeu.etreGagnantePourJoueur(ListeJoueurs[0]);
        
                    if (vict_j1 && ! vict_j2) {
                        textemessage.setText("Victoire de "+ ListeJoueurs[1].Nom);
                    }
                    if (vict_j2 && ! vict_j1) {
                        textemessage.setText("Victoire de "+ ListeJoueurs[0].Nom);
                    }
        
                    if (vict_j1 && vict_j2){
                        if (JoueurCourant == ListeJoueurs[1]){
                            textemessage.setText("Victoire de "+ ListeJoueurs[0].Nom + " faute de jeu de l'autre joueur");
                        }
                        else {
                            textemessage.setText("Victoire de "+ ListeJoueurs[1].Nom + " faute de jeu de l'autre joueur");
                        }
                    }

                }
            });
            PanneauGrille.add(cellGraph);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanneauGrille = new javax.swing.JPanel();
        PanneauCreationPartie = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        NomJoueur1 = new javax.swing.JTextField();
        NomJoueur2 = new javax.swing.JTextField();
        btn_start = new javax.swing.JButton();
        PanneauInfoJeu = new javax.swing.JPanel();
        Presentation1 = new javax.swing.JLabel();
        nom_jcourant = new javax.swing.JLabel();
        lbl_jcourant = new javax.swing.JLabel();
        message = new javax.swing.JScrollPane();
        textemessage = new javax.swing.JTextArea();
        PanneauInfoJoueurs = new javax.swing.JPanel();
        Presentation = new javax.swing.JLabel();
        nom_txt1 = new javax.swing.JLabel();
        couleur_txt1 = new javax.swing.JLabel();
        desint_txt1 = new javax.swing.JLabel();
        nom_var1 = new javax.swing.JLabel();
        couleur_var1 = new javax.swing.JLabel();
        desint_var2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        nom_txt2 = new javax.swing.JLabel();
        couleur_txt2 = new javax.swing.JLabel();
        desint_txt2 = new javax.swing.JLabel();
        nom_var2 = new javax.swing.JLabel();
        couleur_var2 = new javax.swing.JLabel();
        desint_var1 = new javax.swing.JLabel();
        btn_col_0 = new javax.swing.JButton();
        btn_col_1 = new javax.swing.JButton();
        btn_col_2 = new javax.swing.JButton();
        btn_col_3 = new javax.swing.JButton();
        btn_col_4 = new javax.swing.JButton();
        btn_col_5 = new javax.swing.JButton();
        btn_col_6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PanneauGrille.setBackground(new java.awt.Color(240, 200, 190));
        PanneauGrille.setLayout(new java.awt.GridLayout(6, 7));
        getContentPane().add(PanneauGrille, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 672, 576));

        PanneauCreationPartie.setBackground(new java.awt.Color(200, 0, 240));
        PanneauCreationPartie.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Nom Joueur 2 :");
        PanneauCreationPartie.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 170, 30));

        jLabel2.setText("Nom Joueur 1 :");
        PanneauCreationPartie.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 150, 30));

        NomJoueur1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomJoueur1ActionPerformed(evt);
            }
        });
        PanneauCreationPartie.add(NomJoueur1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 110, 30));

        NomJoueur2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomJoueur2ActionPerformed(evt);
            }
        });
        PanneauCreationPartie.add(NomJoueur2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 110, 30));

        btn_start.setText("DÉMARRER PARTIE");
        btn_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_startActionPerformed(evt);
            }
        });
        PanneauCreationPartie.add(btn_start, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 300, 60));

        getContentPane().add(PanneauCreationPartie, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 30, 300, 150));

        PanneauInfoJeu.setBackground(new java.awt.Color(240, 240, 0));
        PanneauInfoJeu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Presentation1.setFont(new java.awt.Font("Myanmar Text", 1, 18)); // NOI18N
        Presentation1.setText("Informations Jeu:");
        PanneauInfoJeu.add(Presentation1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 300, 30));

        nom_jcourant.setText("Joueur courant :");
        PanneauInfoJeu.add(nom_jcourant, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 130, 30));

        lbl_jcourant.setText("Nom Joueur ");
        PanneauInfoJeu.add(lbl_jcourant, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, 160, 30));

        textemessage.setColumns(20);
        textemessage.setRows(5);
        message.setViewportView(textemessage);

        PanneauInfoJeu.add(message, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 370, 130));

        getContentPane().add(PanneauInfoJeu, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 530, 390, 210));

        PanneauInfoJoueurs.setBackground(new java.awt.Color(240, 240, 0));
        PanneauInfoJoueurs.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Presentation.setFont(new java.awt.Font("Myanmar Text", 1, 18)); // NOI18N
        Presentation.setText("Informations Joueurs:");
        PanneauInfoJoueurs.add(Presentation, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 300, 30));

        nom_txt1.setText("Joueur 2 :");
        PanneauInfoJoueurs.add(nom_txt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 130, 30));

        couleur_txt1.setText("Couleur :");
        PanneauInfoJoueurs.add(couleur_txt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 130, 40));

        desint_txt1.setText("Nombre de desintegrateur :");
        PanneauInfoJoueurs.add(desint_txt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 180, 40));

        nom_var1.setText("Nom Joueur 2 ");
        PanneauInfoJoueurs.add(nom_var1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 150, 160, 30));

        couleur_var1.setText("Couleur Joueur 2");
        PanneauInfoJoueurs.add(couleur_var1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 180, 150, 30));

        desint_var2.setText("Nombre de desintegrateurs Joueur 2");
        PanneauInfoJoueurs.add(desint_var2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 210, 40));
        PanneauInfoJoueurs.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 390, -1));

        nom_txt2.setText("Joueur 1 :");
        PanneauInfoJoueurs.add(nom_txt2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 130, 30));

        couleur_txt2.setText("Couleur :");
        PanneauInfoJoueurs.add(couleur_txt2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 130, 40));

        desint_txt2.setText("Nombre de desintegrateur :");
        PanneauInfoJoueurs.add(desint_txt2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 180, 40));

        nom_var2.setText("Nom Joueur 1 ");
        PanneauInfoJoueurs.add(nom_var2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 160, 30));

        couleur_var2.setText("Couleur Joueur 1");
        PanneauInfoJoueurs.add(couleur_var2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 150, 30));

        desint_var1.setText("Nombre de desintegrateurs Joueur 1 ");
        PanneauInfoJoueurs.add(desint_var1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 210, 40));

        getContentPane().add(PanneauInfoJoueurs, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 230, 420, 280));

        btn_col_0.setText("1");
        btn_col_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_col_0ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_col_0, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        btn_col_1.setText("2");
        btn_col_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_col_1ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_col_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 40, -1, -1));

        btn_col_2.setText("3");
        btn_col_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_col_2ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_col_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 40, -1, -1));

        btn_col_3.setText("4");
        btn_col_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_col_3ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_col_3, new org.netbeans.lib.awtextra.AbsoluteConstraints(318, 40, -1, -1));

        btn_col_4.setText("5");
        btn_col_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_col_4ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_col_4, new org.netbeans.lib.awtextra.AbsoluteConstraints(414, 40, -1, -1));

        btn_col_5.setText("6");
        btn_col_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_col_5ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_col_5, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 40, -1, -1));

        btn_col_6.setText("7");
        btn_col_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_col_6ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_col_6, new org.netbeans.lib.awtextra.AbsoluteConstraints(606, 40, -1, -1));

        setBounds(0, 0, 1216, 806);
    }// </editor-fold>//GEN-END:initComponents

    private void NomJoueur2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomJoueur2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NomJoueur2ActionPerformed

    private void NomJoueur1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomJoueur1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NomJoueur1ActionPerformed

    private void btn_col_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_col_5ActionPerformed
        jouerDansColonne(5);
        if (GrilleJeu.colonneRemplie(5) == true) btn_col_5.setEnabled(false);
        joueurSuivant();
    }//GEN-LAST:event_btn_col_5ActionPerformed

    private void btn_col_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_col_0ActionPerformed
        jouerDansColonne(0);
        if (GrilleJeu.colonneRemplie(0) == true) btn_col_0.setEnabled(false);
        joueurSuivant();
    }//GEN-LAST:event_btn_col_0ActionPerformed

    private void btn_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_startActionPerformed
        PanneauInfoJeu.setVisible(true);// dès que le bouton est activé, affiche les panneaux cachés
        PanneauInfoJoueurs.setVisible(true);
        initialiserPartie();
        PanneauGrille.repaint(); // dès que la grille est crée, cette commande affiche les images associés aux éléments du jeu 
        btn_start.setEnabled(false);// une fois que la partie est lancée, on ne peut plus cliquer dessus
    }//GEN-LAST:event_btn_startActionPerformed

    private void btn_col_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_col_1ActionPerformed
        jouerDansColonne(1);
        if (GrilleJeu.colonneRemplie(1) == true) btn_col_1.setEnabled(false);
        joueurSuivant();
    }//GEN-LAST:event_btn_col_1ActionPerformed

    private void btn_col_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_col_2ActionPerformed
        jouerDansColonne(2);
        if (GrilleJeu.colonneRemplie(2) == true) btn_col_2.setEnabled(false);
        joueurSuivant();
    }//GEN-LAST:event_btn_col_2ActionPerformed

    private void btn_col_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_col_3ActionPerformed
        jouerDansColonne(3);
        if (GrilleJeu.colonneRemplie(3) == true) btn_col_3.setEnabled(false);
        joueurSuivant();
    }//GEN-LAST:event_btn_col_3ActionPerformed

    private void btn_col_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_col_4ActionPerformed
        jouerDansColonne(4);
        if (GrilleJeu.colonneRemplie(4) == true) btn_col_4.setEnabled(false);
        joueurSuivant();
    }//GEN-LAST:event_btn_col_4ActionPerformed

    private void btn_col_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_col_6ActionPerformed
        jouerDansColonne(6);
        if (GrilleJeu.colonneRemplie(6) == true) btn_col_6.setEnabled(false);
        joueurSuivant(); 
    }//GEN-LAST:event_btn_col_6ActionPerformed
    public boolean jouerDansColonne(int indice_colonne){
        boolean jouer;
        jouer=GrilleJeu.ajouterJetonDansColonne(JoueurCourant,indice_colonne);
        PanneauGrille.repaint();//On met à jour la grille
        desint_var1.setText(ListeJoueurs[1].nombreDesintegrateurs+"");//On indique le nombre de désintégrateur de chaque joueur
        desint_var2.setText(ListeJoueurs[0].nombreDesintegrateurs+"");
        
        boolean vict_j1 = GrilleJeu.etreGagnantePourJoueur(ListeJoueurs[1]);//On définie la victoire pour chaque joueur
        boolean vict_j2 = GrilleJeu.etreGagnantePourJoueur(ListeJoueurs[0]);
        
        if (vict_j1 && ! vict_j2) {//On définie la victoire du J1
            textemessage.setText("Victoire de "+ ListeJoueurs[1].Nom);
        }
        if (vict_j2 && ! vict_j1) {//On définie la victoire du J2
            textemessage.setText("Victoire de "+ ListeJoueurs[0].Nom);
        }
        
        if (vict_j1 && vict_j2){//On départage en cas de victoire simultaner
            if (JoueurCourant == ListeJoueurs[1]){
                textemessage.setText("Victoire de "+ ListeJoueurs[0].Nom + " faute de jeu de l'autre joueur");
            }
            else {
                textemessage.setText("Victoire de "+ ListeJoueurs[1].Nom + " faute de jeu de l'autre joueur");
            }
        }
        
        
        if (jouer==true){
            return true;
        }
        else return false;

    }
    public void joueurSuivant(){// alterne le nom du joueur courant dans la case du panneau info jeu
        if(JoueurCourant==ListeJoueurs[0]){
            JoueurCourant=ListeJoueurs[1];
        }
        else JoueurCourant=ListeJoueurs[0];
        lbl_jcourant.setText(JoueurCourant.Nom);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FenetreDeJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FenetreDeJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FenetreDeJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FenetreDeJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FenetreDeJeu().setVisible(true);
            }
        });
    }
    
    public void initialiserPartie(){
        GrilleJeu.viderGrille(); // on vide la grille
        Random rand= new Random(); 
        String nomJ1=NomJoueur1.getText();// on prends les noms que les joueurs saisisent dans les cases dediés
        String nomJ2=NomJoueur2.getText();
        Joueur J1=new Joueur(nomJ1);
        Joueur J2=new Joueur(nomJ2);
        ListeJoueurs[0]=J1;
        ListeJoueurs[1]=J2;
        attribuerCouleursAuxJoueurs();
        System.out.println(J1.Couleur+" est attribué au joueur "+J1.Nom);
        System.out.println(J2.Couleur+" est attribué au joueur "+J2.Nom);
        nom_var1.setText(nomJ1);// on affiche les noms des joueurs sur le panneau d'info joueurs
        nom_var2.setText(nomJ2);
        couleur_var1.setText(J1.Couleur);// on affiche les couleurs des joueurs sur le panneau d'info joueurs
        couleur_var2.setText(J2.Couleur);
        desint_var2.setText(J1.nombreDesintegrateurs+"");// on affiche le nombre de desintegrateurs des joueurs sur le panneau dedié 
        desint_var1.setText(J2.nombreDesintegrateurs+"");
        boolean lePremier=rand.nextBoolean();
        if(lePremier==true){// fonction qui choisit au hasard le premier joueur
            JoueurCourant=ListeJoueurs[0];
        }
        else{
            JoueurCourant=ListeJoueurs[1];
        }
        lbl_jcourant.setText(JoueurCourant.Nom);
        for(int i=0;i<21;i++){
            J1.ajouterJeton(new Jeton(J1.Couleur));
            J2.ajouterJeton(new Jeton(J2.Couleur));
        }
        for(int i=0;i<2;i++){// on crée 2 trous noir qui cachent des desintegrateurs
            int ligneTrouNoirDes=rand.nextInt(6);
            int colonneTrouNoirDes=rand.nextInt(7);
            GrilleJeu.placerDesintegrateur(ligneTrouNoirDes, colonneTrouNoirDes);
            GrilleJeu.placerTrouNoir(ligneTrouNoirDes, colonneTrouNoirDes);
            }
        for(int i=0;i<3;i++){// on crée 3 trous noir
            String TrouPlace=new String();
            TrouPlace="";
            while(TrouPlace==""){// pour éviter les situations où le trou noir n'est pas placé (car autre trou noir ou desintegrateur présent), alors que le compteur a déjà évolué
                int ligneTrouNoir=rand.nextInt(6);
                int colonneTrouNoir=rand.nextInt(7);
                if(GrilleJeu.Cellules[ligneTrouNoir][colonneTrouNoir].presenceDesintegrateur()==false){
                    if(GrilleJeu.Cellules[ligneTrouNoir][colonneTrouNoir].presenceTrouNoir()==false){
                GrilleJeu.placerTrouNoir(ligneTrouNoir, colonneTrouNoir);
                TrouPlace="ok";
                    }
                }
        }
        }
        for(int i=0;i<3;i++){
            String DesPlace=new String();
            DesPlace="";
            while(DesPlace==""){// système identique au celui d'en haut
            int ligneDesintegrateur=rand.nextInt(6);
            int colonneDesintegrateur=rand.nextInt(7);
                if(GrilleJeu.Cellules[ligneDesintegrateur][colonneDesintegrateur].presenceDesintegrateur()==false){
                    if(GrilleJeu.Cellules[ligneDesintegrateur][colonneDesintegrateur].presenceTrouNoir()==false){
                        GrilleJeu.placerDesintegrateur(ligneDesintegrateur, colonneDesintegrateur);
                    DesPlace="ok";
                    }
                }
            }
        }
        }
    
     public void attribuerCouleursAuxJoueurs(){
        Random rand= new Random();
        boolean couleur;
        couleur=rand.nextBoolean();
        if (couleur==true){
            ListeJoueurs[0].Couleur="Rouge";
            ListeJoueurs[1].Couleur="Jaune";
        }
        else{
             ListeJoueurs[0].Couleur="Jaune";  
             ListeJoueurs[1].Couleur="Rouge";
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NomJoueur1;
    private javax.swing.JTextField NomJoueur2;
    private javax.swing.JPanel PanneauCreationPartie;
    private javax.swing.JPanel PanneauGrille;
    private javax.swing.JPanel PanneauInfoJeu;
    private javax.swing.JPanel PanneauInfoJoueurs;
    private javax.swing.JLabel Presentation;
    private javax.swing.JLabel Presentation1;
    private javax.swing.JButton btn_col_0;
    private javax.swing.JButton btn_col_1;
    private javax.swing.JButton btn_col_2;
    private javax.swing.JButton btn_col_3;
    private javax.swing.JButton btn_col_4;
    private javax.swing.JButton btn_col_5;
    private javax.swing.JButton btn_col_6;
    private javax.swing.JButton btn_start;
    private javax.swing.JLabel couleur_txt1;
    private javax.swing.JLabel couleur_txt2;
    private javax.swing.JLabel couleur_var1;
    private javax.swing.JLabel couleur_var2;
    private javax.swing.JLabel desint_txt1;
    private javax.swing.JLabel desint_txt2;
    private javax.swing.JLabel desint_var1;
    private javax.swing.JLabel desint_var2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbl_jcourant;
    private javax.swing.JScrollPane message;
    private javax.swing.JLabel nom_jcourant;
    private javax.swing.JLabel nom_txt1;
    private javax.swing.JLabel nom_txt2;
    private javax.swing.JLabel nom_var1;
    private javax.swing.JLabel nom_var2;
    private javax.swing.JTextArea textemessage;
    // End of variables declaration//GEN-END:variables
}
